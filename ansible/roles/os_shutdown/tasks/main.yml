# Fixes error: "cannot evict pod as it would violate the pods disruption budget"
# Longhorn is supposed to delete pdb as part of draining and allowing setting "node-drain-policy: always-allow" but won't.
# Deleting pdb won't affect placement of pods and its recreated when longhorn reinitialises upon uncordon
- name: Delete Pod Disruption Budgets # noqa no-changed-when command-instead-of-shell partial-become[task]
  ansible.builtin.shell: |
    set -o pipefail
    kubectl get pdb -A -o json | jq -r '.items[] | select(.spec.selector.matchLabels."longhorn.io/component" == "instance-manager" and .spec.selector.matchLabels."longhorn.io/node" == "{{ inventory_hostname | lower }}")' \
    | kubectl delete -f -
  become_user: "{{ local_username }}"
  delegate_to: localhost
  when: reboot_required_file.stat.exists or just_reboot is defined

- name: Drain node # noqa no-changed-when command-instead-of-shell partial-become[task]
  ansible.builtin.shell: |
    kubectl drain "{{ inventory_hostname | lower }}" \
    --delete-emptydir-data \
    --force \
    --ignore-daemonsets \
    --pod-selector="{{ pod_selectors | join(',') }}"
  become_user: "{{ local_username }}"
  delegate_to: localhost
  vars:
    pod_selectors:
      - app!=csi-attacher
      - app!=csi-provisioner
      - app!=longhorn-admission-webhook
      - app!=longhorn-conversion-webhook
      - app!=longhorn-driver-deployer
  register: swamp_drained
  when: reboot_required_file.stat.exists or just_reboot is defined

- name: Shutdown node
  community.general.shutdown:
  when: swamp_drained.rc == 0
