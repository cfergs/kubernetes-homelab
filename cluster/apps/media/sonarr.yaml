apiVersion: v1
kind: ConfigMap
metadata:
  name: init-sonarr-cm
  namespace: media
data:
  99-sonarr-init.sh: |
    #!/usr/bin/with-contenv bash

    FILE=${CONFIG_FILE}
    URL=/sonarr

    if [ ! -f "$FILE" ]; then
      echo "no config file exists - you must be doing a fresh install"
      echo "a config file will be created for you by the container. Restart container to update values"
    fi

    if [ -f "$FILE" ]; then
      sed -i '/<UrlBase><\/UrlBase>/,${s||<UrlBase>'"$URL"'<\/UrlBase>|;b};$q1' $FILE
      if [ $? -eq 0 ]; then
        echo "updated baseurl to $URL"
      fi
    fi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  replicas: 1 # tells deployment to run x pods matching the template
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: config-file-pvc
      - name: scripts # name of volume
        configMap:
          name: init-sonarr-cm # name of the ConfigMap you want to mount.
          items: # files to create
          - key: 99-sonarr-init.sh
            path: 99-sonarr-init.sh
      containers:
      - name: sonarr
        image: hotio/sonarr
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", 'cp /scripts/* /etc/cont-init.d/']
        env:
        - name: CONFIG_FILE
          value: /config/config.xml
        ports:
        - containerPort: 8989
        volumeMounts:
        - name: config-volume
          mountPath: /config
          subPath: configs/sonarr
        - name: scripts
          mountPath: /scripts
        startupProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - grep "<UrlBase>/sonarr</UrlBase>" /config/config.xml
              # other ways of testing that didnt pan out
              # curl -s http://localhost:8989/sonarr/ping -H 'Accept: application/json' | jq -e '. | select(.status=="OK")'
              # file=$(cat /config/config.xml); APIKEY=$(sed -ne '/ApiKey/{s/.*<ApiKey>\(.*\)<\/ApiKey>.*/\1/p;q;}' <<< "$file"); jq -e ".urlBase" <<< $( curl -s -k --fail "localhost:8989/sonarr/api/v3/system/status?apiKey=$APIKEY"); ## need to add in if $? then exit 1 
          failureThreshold: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /sonarr
            port: 8989
          initialDelaySeconds: 60
          periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  ports:
  - port: 8989
    protocol: TCP
    targetPort: 8989
  selector:
    app: sonarr
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: sonarr-ingress
  namespace: media
spec:
  entryPoints:
  - web
  routes:
    - match: PathPrefix(`/sonarr`)
      kind: Rule
      services:
        - name: sonarr
          port: 8989
