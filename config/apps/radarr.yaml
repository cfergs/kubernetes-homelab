apiVersion: v1
kind: ConfigMap
metadata:
  name: init-radarr-cm
  namespace: downloads
data:
  99-radarr-init.sh: |
    #!/usr/bin/with-contenv bash

    FILE=${CONFIG_FILE}
    URL=/radarr

    if [ ! -f "$FILE" ]; then
      echo "no config file exists - you must be doing a fresh install"
      echo "a config file will be created for you by the container. Restart container to update values"
    fi

    if [ -f "$FILE" ]; then
      sed -i '/<UrlBase><\/UrlBase>/,${s||<UrlBase>'"$URL"'<\/UrlBase>|;b};$q1' $FILE
      if [ $? -eq 0 ]; then
        echo "updated baseurl to $URL"
      fi
    fi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: downloads
  labels:
    app: radarr
spec:
  replicas: 1 # tells deployment to run x pods matching the template
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: config-file-pvc
      - name: scripts # name of volume
        configMap:
          name: init-radarr-cm # name of the ConfigMap you want to mount.
          items: # files to create
          - key: 99-radarr-init.sh
            path: 99-radarr-init.sh
      containers:
      - name: radarr
        image: hotio/radarr
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", 'cp /scripts/* /etc/cont-init.d/']
        env:
        - name: CONFIG_FILE
          value: /config/config.xml
        ports:
        - containerPort: 7878
        volumeMounts:
        - name: config-volume
          mountPath: "/config"
          subPath: "configs/radarr"
        - name: scripts
          mountPath: /scripts
        startupProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - grep "<UrlBase>/radarr</UrlBase>" /config/config.xml
          failureThreshold: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /radarr
            port: 7878
          initialDelaySeconds: 60
          periodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: radarr
  namespace: downloads
  labels:
    app: radarr
spec:
  ports:
  - port: 7878
    protocol: TCP
    targetPort: 7878
  selector:
    app: radarr
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: radarr-ingress
  namespace: downloads
spec:
  entryPoints:
  - web
  routes:
    - match: PathPrefix(`/radarr`)
      kind: Rule
      services:
        - name: radarr
          port: 7878
