apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sabnzbd
  namespace: downloads
  labels:
    app: sabnzbd
spec:
  serviceName: sabnzbd
  replicas: 1
  selector:
    matchLabels:
      app: sabnzbd
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: sabnzbd-volume
          persistentVolumeClaim:
            claimName: sabnzbd-volume-pvc
        - name: download-volume
          persistentVolumeClaim:
            claimName: sabnzbd-downloads-pvc
        - name: tmpvol
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
      containers:
        - name: sabnzbd
          image: ghcr.io/onedr0p/sabnzbd:4.2.2@sha256:40e89ec57e3659f409d52b14d19d4bdb9b3bb3131e5578afa11f79ff529b030d
          ports:
            - containerPort: 8080
          env:
            - name: TZ
              value: ${TIMEZONE}
            - name: SABNZBD__HOST_WHITELIST_ENTRIES # fix "hostname verification failed" error
              value: media.${DOMAIN_NAME}
          volumeMounts:
            - name: sabnzbd-volume
              mountPath: /config
            - name: download-volume
              mountPath: /media/downloads/usenet
            - name: tmpvol
              mountPath: /tmp # needed to download nzbs
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  namespace: downloads
  labels:
    app: sabnzbd
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: sabnzbd
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: sabnzbd-ingress
  namespace: downloads
spec:
  ingressClassName: nginx-external
  rules:
    - host: media.${DOMAIN_NAME}
      http:
        paths:
          - path: /sabnzbd
            pathType: Prefix
            backend:
              service:
                name: sabnzbd
                port:
                  number: 8080
