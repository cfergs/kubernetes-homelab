apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    checkov.io/skip1: CKV_K8S_20=Containers should not run with allowPrivilegeEscalation
    checkov.io/skip2: CKV_K8S_22=Use read-only filesystem for containers where possible
    checkov.io/skip3: CKV_K8S_23=Minimize the admission of root containers
    checkov.io/skip4: CKV_K8S_28=Minimize the admission of containers with the NET_RAW capability
    checkov.io/skip5: CKV_K8S_30=Apply security context to your containers"
    checkov.io/skip6: CKV_K8S_37=Minimize the admission of containers with capabilities assigned
    configmap.reloader.stakater.com/reload: hass-config # reload pod if configuration.yaml updated
  name: hass
  namespace: home-automation
spec:
  serviceName: hass
  replicas: 1
  selector:
    matchLabels:
      name: hass
  template:
    metadata:
      name: hass
      labels:
        name: hass
    spec:
      automountServiceAccountToken: false
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: hass-config
          configMap:
            name: hass-config
        - name: hass-volume
          persistentVolumeClaim:
            claimName: hass-volume-pvc
      containers:
        - name: homeassistant
          image: ghcr.io/home-assistant/home-assistant:2023.6.2@sha256:d23d82c22c4dc97a3d0c187d7cd9e8370033798222683c45b8b80a0ad8a81620
          ports:
            - containerPort: 8123
          env:
            - name: TZ
              value: ${TIMEZONE}
          volumeMounts:
            - name: hass-volume
              mountPath: /config
            - name: hass-config
              mountPath: /config/configuration.yaml
              subPath: configuration.yaml
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: hass
  namespace: home-automation
spec:
  ports:
    - name: hass-8123
      port: 8123
      protocol: TCP
      targetPort: 8123
  selector:
    name: hass
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: hass-ingress
  namespace: home-automation
spec:
  ingressClassName: nginx-internal
  rules:
    - host: hass.${DOMAIN_NAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hass
                port:
                  name: hass-8123
