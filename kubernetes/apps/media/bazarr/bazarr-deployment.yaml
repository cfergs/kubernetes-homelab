apiVersion: v1
kind: ConfigMap
metadata:
  name: init-bazarr-files
  namespace: media
data:
  config.ini: |
    [general]
    ip = 0.0.0.0
    port = 6767
    base_url = /bazarr

    [analytics]
    enabled = False
  entrypoint.sh: |
    #!/usr/bin/env bash

    #shellcheck disable=SC1091
    source "/shim/umask.sh"
    source "/shim/vpn.sh"

    if [[ ! -f "/config/config/config.ini" ]]; then
      printf "Copying over default configuration ... "
      mkdir -p /config/config
      cp /app/config.ini /config/config/config.ini
    fi

    exec /usr/bin/python3 /app/bazarr.py --no-update --config /config ${EXTRA_ARGS}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bazarr
  namespace: media
  labels:
    app: bazarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bazarr
  template:
    metadata:
      labels:
        app: bazarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
      - name: bazarr-volume
        persistentVolumeClaim:
          claimName: bazarr-volume-pvc
      - name: bazarr-config-ini
        configMap:
          name: init-bazarr-files
          items:
          - key: config.ini
            path: config.ini
          defaultMode: 0644
      - name: bazarr-entrypoint-sh
        configMap:
          name: init-bazarr-files
          items:
          - key: entrypoint.sh
            path: entrypoint.sh
          defaultMode: 0755
      - name: movies-volume
        persistentVolumeClaim:
          claimName: bazarr-movies-pvc
      - name: tvshows-volume
        persistentVolumeClaim:
          claimName: bazarr-tvshows-pvc
      containers:
      - name: bazarr
        image: ghcr.io/k8s-at-home/bazarr:v1.1.1@sha256:9e6717e5904dd827529dcebd656cc6872e1aeb0882dba85bcaaa722202c74a76
        command: ["/bin/sh"]
        args: ["-c", "/app/entrypoint.sh"]
        ports:
        - containerPort: 6767
        volumeMounts:
        - name: bazarr-volume
          mountPath: /config
        - name: bazarr-config-ini
          mountPath: /app/config.ini
          subPath: config.ini
        - name: bazarr-entrypoint-sh
          mountPath: /app/entrypoint.sh
          subPath: entrypoint.sh
        - name: movies-volume
          mountPath: /media/movies
        - name: tvshows-volume
          mountPath: /media/tvshows
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: bazarr
  namespace: media
  labels:
    app: bazarr
spec:
  ports:
  - port: 6767
    protocol: TCP
    targetPort: 6767
  selector:
    app: bazarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: bazarr-ingress
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: media.${DOMAIN_NAME}
    http:
      paths:
      - path: /bazarr
        pathType: Prefix
        backend:
          service:
            name: bazarr
            port:
              number: 6767
  tls:
  - hosts:
    - media.${DOMAIN_NAME}
