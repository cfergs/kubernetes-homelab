apiVersion: v1
kind: ConfigMap
metadata:
  name: init-bazarr-files
  namespace: media
data:
  config.ini: |
    [general]
    ip = 0.0.0.0
    port = 6767
    base_url = /bazarr

    [analytics]
    enabled = False
  entrypoint.sh: |
    #!/usr/bin/env bash

    #shellcheck disable=SC1091
    test -f "/scripts/umask.sh" && source "/scripts/umask.sh"

    if [[ ! -f "/config/config/config.ini" ]]; then
      printf "Copying over default configuration ... "
      mkdir -p /config/config
      cp /app/config.ini /config/config/config.ini
    fi

    #shellcheck disable=SC2086
    exec /usr/bin/python3 /app/bazarr.py --no-update --config /config ${EXTRA_ARGS}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bazarr
  namespace: media
  labels:
    app: bazarr
spec:
  serviceName: bazarr
  replicas: 1
  selector:
    matchLabels:
      app: bazarr
  template:
    metadata:
      labels:
        app: bazarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
        - name: bazarr-volume
          persistentVolumeClaim:
            claimName: bazarr-volume-pvc
        - name: bazarr-config-ini
          configMap:
            name: init-bazarr-files
            items:
              - key: config.ini
                path: config.ini
            defaultMode: 0644
        - name: bazarr-entrypoint-sh
          configMap:
            name: init-bazarr-files
            items:
              - key: entrypoint.sh
                path: entrypoint.sh
            defaultMode: 0755
        - name: movies-volume
          persistentVolumeClaim:
            claimName: bazarr-movies-pvc
        - name: tvshows-volume
          persistentVolumeClaim:
            claimName: bazarr-tvshows-pvc
        - name: tmpvol
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
      containers:
        - name: bazarr
          image: ghcr.io/onedr0p/bazarr:1.2.1@sha256:dc9fb4ae4e1d3724bff06224dc640429ff56c0326057b4a14000d2fbd84a7703
          command: ["/bin/sh"]
          args: ["-c", "/app/entrypoint.sh"]
          ports:
            - containerPort: 6767
          env:
            - name: TZ
              value: ${TIMEZONE}
          volumeMounts:
            - name: bazarr-volume
              mountPath: /config
            - name: bazarr-config-ini
              mountPath: /app/config.ini
              subPath: config.ini
            - name: bazarr-entrypoint-sh
              mountPath: /app/entrypoint.sh
              subPath: entrypoint.sh
            - name: movies-volume
              mountPath: /media/movies
            - name: tvshows-volume
              mountPath: /media/tvshows
            - name: tmpvol
              mountPath: /tmp
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: bazarr
  namespace: media
  labels:
    app: bazarr
spec:
  ports:
    - port: 6767
      protocol: TCP
      targetPort: 6767
  selector:
    app: bazarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: bazarr-ingress
  namespace: media
spec:
  ingressClassName: nginx-external
  rules:
    - host: media.${DOMAIN_NAME}
      http:
        paths:
          - path: /bazarr
            pathType: Prefix
            backend:
              service:
                name: bazarr
                port:
                  number: 6767
