apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prowlarr
  namespace: media
spec:
  serviceName: prowlarr
  replicas: 1
  selector:
    matchLabels:
      name: prowlarr
  template:
    metadata:
      labels:
        name: prowlarr
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile:
          type: RuntimeDefault
      volumes:
        - name: prowlarr-volume
          persistentVolumeClaim:
            claimName: prowlarr-volume-pvc
        - name: tmpvol
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
      containers:
        - name: prowlarr
          image: ghcr.io/onedr0p/prowlarr-develop:1.14.1@sha256:3dfc021d762f3d52419a8d9d58a60b2cbce660f99f293cb583d0b087e3642b6a
          ports:
            - containerPort: 9696
          env:
            - name: PROWLARR__AUTHENTICATION_METHOD
              value: External
            - name: PROWLARR__ANALYTICS_ENABLED
              value: "False"
            - name: PROWLARR__URL_BASE
              value: /prowlarr
          volumeMounts:
            - name: prowlarr-volume
              mountPath: /config
            - name: tmpvol
              mountPath: /tmp # Resolve error when using ReadOnly FS: "Failed to create CoreCLR, HRESULT: 0x80004005" - https://github.com/Azure/azure-functions-host/issues/8181 && https://github.com/dotnet/runtime/issues/3168
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: media
spec:
  ports:
    - port: 9696
      protocol: TCP
      targetPort: 9696
  selector:
    name: prowlarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: prowlarr-ingress
  namespace: media
spec:
  ingressClassName: nginx-external
  rules:
    - host: media.${DOMAIN_NAME}
      http:
        paths:
          - path: /prowlarr
            pathType: Prefix
            backend:
              service:
                name: prowlarr
                port:
                  number: 9696
