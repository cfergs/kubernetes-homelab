apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: media
  labels:
    app: prowlarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
      - name: prowlarr-volume
        persistentVolumeClaim:
          claimName: prowlarr-volume-pvc
      - emptyDir: {}
        name: tmpvol
      containers:
      - name: prowlarr
        image: ghcr.io/k8s-at-home/prowlarr-develop:v0.4.6.1969@sha256:100c4ec286ace70764cdb632c56d4b1e9f0ab619dfda9393395141ab3da960f8
        ports:
        - containerPort: 9696
        env:
        - name: PROWLARR__URL_BASE
          value: /prowlarr
        volumeMounts:
        - name: prowlarr-volume
          mountPath: /config
        - name: tmpvol
          mountPath: /tmp # Resolve error when using ReadOnly FS: "Failed to create CoreCLR, HRESULT: 0x80004005" - https://github.com/Azure/azure-functions-host/issues/8181 && https://github.com/dotnet/runtime/issues/3168 
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
---
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: media
  labels:
    app: prowlarr
spec:
  ports:
  - port: 9696
    protocol: TCP
    targetPort: 9696
  selector:
    app: prowlarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: prowlarr-ingress
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: media.${DOMAIN_NAME}
    http:
      paths:
      - path: /prowlarr
        pathType: Prefix
        backend:
          service:
            name: prowlarr
            port:
              number: 9696
  tls:
  - hosts:
    - media.${DOMAIN_NAME}
