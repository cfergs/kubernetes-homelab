apiVersion: apps/v1
kind: Deployment
metadata:
  name: readarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      name: readarr
  template:
    metadata:
      labels:
        name: readarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
      - name: readarr-volume
        persistentVolumeClaim:
          claimName: readarr-volume-pvc
      - name: downloads-volume
        persistentVolumeClaim:
          claimName: readarr-downloads-pvc
      - name: books-volume
        persistentVolumeClaim:
          claimName: readarr-books-pvc
      containers:
      - name: readarr
        image: ghcr.io/onedr0p/readarr-develop:0.1.1.1320@sha256:be1ffc2a5049dc5750b9410c38185984718b548bc7e1b66265e04480f10281df
        ports:
        - containerPort: 8787
        env:
        - name: READARR__URL_BASE
          value: /readarr
        volumeMounts:
        - name: readarr-volume
          mountPath: /config
        - name: books-volume
          mountPath: /media/books
        - name: downloads-volume
          mountPath: /media/downloads
        securityContext:
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: readarr
  namespace: media
spec:
  ports:
  - name: readarr-gui
    port: 8787
    protocol: TCP
    targetPort: 8787
  selector:
    name: readarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: readarr-ingress
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: media.${DOMAIN_NAME}
    http:
      paths:
      - path: /readarr
        pathType: Prefix
        backend:
          service:
            name: readarr
            port:
              name: readarr-gui
  tls:
  - hosts:
    - media.${DOMAIN_NAME}
