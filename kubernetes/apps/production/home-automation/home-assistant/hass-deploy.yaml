apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: hass-config # reload pod if configuration.yaml updated
  name: hass
  namespace: home-automation
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hass
  template:
    metadata:
      name: hass
      labels:
        name: hass
    spec:
      volumes:
      - name: hass-config
        configMap:
          name: hass-config
    #  - name: hass-secrets-store
    #    csi:
    #      driver: secrets-store.csi.k8s.io
    #      readOnly: true
    #      volumeAttributes:
    #        secretProviderClass: azure-hass
    #      nodePublishSecretRef:
    #        name: ${AZURE_SECRETS_VALUE}
      - name: automation-volume
        persistentVolumeClaim:
          claimName: automation-volume-pvc
      containers:
      - name: homeassistant
        image: homeassistant/home-assistant:2022.3.8
        ports:
        - containerPort: 8123
        env:
        - name: TZ
          value: Australia/Perth
        volumeMounts:
        - name: automation-volume
          mountPath: /config
          subPath: configs/home-assistant
        - name: hass-config
          mountPath: /config/configuration.yaml
          subPath: configuration.yaml
      #  - name: hass-secrets-store
      #    mountPath: /mnt/secrets-store
      #    readOnly: true
---
apiVersion: v1
kind: Service
metadata:
  name: hass
  namespace: home-automation
spec:
  ports:
  - name: hass-8123
    port: 8123
    protocol: TCP
    targetPort: 8123
  selector:
    name: hass
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: hass-ingress
  namespace: home-automation
spec:
  ingressClassName: nginx-internal
  rules:
  - host: hass.${DOMAIN_NAME}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hass
            port:
              name: hass-8123
  tls:
  - hosts:
    - hass.${DOMAIN_NAME}
