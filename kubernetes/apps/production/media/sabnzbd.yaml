apiVersion: longhorn.io/v1beta1
kind: Volume
metadata:
  labels:
    longhornvolume: sabnzbd-config-volume
  name: sabnzbd-config-volume
  namespace: longhorn-system
spec:
  accessMode: rwx
  storageClassName: longhorn-customised
  engineImage: longhornio/longhorn-engine:v1.2.4
  frontend: blockdev
  numberOfReplicas: 2
  size: "1073741824"
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: sabnzbd-config-pv
spec:
  capacity:
    storage: 1Gi
  csi:
    driver: driver.longhorn.io
    volumeHandle: sabnzbd-config-volume
    fsType: ext4
    volumeAttributes:
      numberOfReplicas: "2"
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: longhorn-customised
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sabnzbd-config-pvc
  namespace: media
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  volumeName: sabnzbd-config-pv
  storageClassName: longhorn-customised
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  namespace: media
  labels:
    app: sabnzbd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sabnzbd
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: sabnzbd-config-pvc
      containers:
      - name: sabnzbd
        image: ghcr.io/k8s-at-home/sabnzbd
        ports:
        - containerPort: 8080
        env:
        - name: TZ
          value: Australia/Perth
        volumeMounts:
        - name: config-volume
          mountPath: /config
          subPath: configs/sabnzbd
        securityContext:
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  namespace: media
  labels:
    app: sabnzbd
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sabnzbd
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: sabnzbd-ingress
  namespace: media
spec:
  entryPoints:
  - web
  routes:
    - match: PathPrefix(`/sabnzbd`)
      kind: Rule
      services:
        - name: sabnzbd
          port: 8080
