apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
      - name: config-volume
        persistentVolumeClaim:
          claimName: config-file-pvc
      containers:
      - name: sonarr
        image: ghcr.io/k8s-at-home/sonarr
        ports:
        - containerPort: 8989
        env:
        - name: SONARR__URL_BASE
          value: /sonarr
        volumeMounts:
        - name: config-volume
          mountPath: "/config"
          subPath: "configs/sonarr"
        securityContext:
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  namespace: media
  labels:
    app: sonarr
spec:
  ports:
  - port: 8989
    protocol: TCP
    targetPort: 8989
  selector:
    app: sonarr
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  name: sonarr-ingress
  namespace: media
spec:
  ingressClassName: nginx
  rules:
  - host: media.${DOMAIN_NAME}
    http:
      paths:
      - path: /sonarr
        pathType: Prefix
        backend:
          service:
            name: sonarr
            port:
              number: 8989
  tls:
  - hosts:
    - media.${DOMAIN_NAME}
