# yaml-language-server: $schema=../../../../schemas/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitor
spec:
  interval: 1h0m0s
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 48.3.1
      interval: 1h0m0s
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # special flux config as taken from https://github.com/fluxcd/flux2-monitoring-example/tree/main
  # kept in seperate ConfigMap due to it's size
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml

  values:
    crds:
      enabled: false # crds are installed as part of ansible base deployment

    defaultRules:
      rules:
        etcd: false

    fullnameOverride: prometheus

    grafana:
      enabled: true
      admin:
        existingSecret: grafana-admin-creds

      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: grafana-dashboards-flux
              orgId: 1
              folder: Flux
              type: file
              disableDeletion: true
              editable: true
              options:
                path: /var/lib/grafana/dashboards/grafana-dashboards-flux
            - name: grafana-dashboards-infrastructure
              orgId: 1
              folder: Infrastructure
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/grafana-dashboards-infrastructure
            - name: grafana-dashboards-kubernetes
              orgId: 1
              folder: Kubernetes
              type: file
              disableDeletion: true
              editable: true
              options:
                path: /var/lib/grafana/dashboards/grafana-dashboards-kubernetes
            - name: grafana-dashboards-nginx
              orgId: 1
              folder: Nginx
              type: file
              disableDeletion: true
              editable: true
              options:
                path: /var/lib/grafana/dashboards/grafana-dashboards-nginx
            - name: grafana-dashboards-thanos
              orgId: 1
              folder: Thanos
              type: file
              disableDeletion: true
              editable: true
              options:
                path: /var/lib/grafana/dashboards/grafana-dashboards-thanos

      dashboards:
        grafana-dashboards-flux:
          cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
        grafana-dashboards-infrastructure:
          cert-manager:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
            datasource: Prometheus
          external-secrets:
            url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
            datasource: Prometheus
          longhorn-storage:
            gnetId: 13032 # https://grafana.com/grafana/dashboards/13032?tab=revisions
            revision: 6
            datasource:
              - name: DS_PROMETHEUS
                value: Prometheus
          mikrotik-mktxp-exporter:
            gnetId: 13679 # https://grafana.com/grafana/dashboards/13679?tab=revisions
            revision: 20
            datasource:
              - name: DS_PROMETHEUS
                value: Prometheus
          metallb:
            gnetId: 14127 # https://grafana.com/grafana/dashboards/14127?tab=revisions
            revision: 1
            datasource: Prometheus
          node-exporter-full:
            gnetId: 1860 # https://grafana.com/grafana/dashboards/1860?tab=revisions
            revision: 31
            datasource: Prometheus
        grafana-dashboards-kubernetes:
          k8s-system-api-server:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          k8s-system-coredns:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          k8s-views-global:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          k8s-views-namespaces:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          k8s-views-nodes:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          k8s-views-pods:
            url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
        grafana-dashboards-nginx:
          nginx-controller:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/nginx.json
          nginx-request-handling-performance:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/grafana/dashboards/request-handling-performance.json
            datasource: Prometheus
        grafana-dashboards-thanos:
          thanos-bucket-replicate:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
            datasource: Prometheus
          thanos-compact:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
            datasource: Prometheus
          thanos-overview:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
            datasource: Prometheus
          thanos-query:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
            datasource: Prometheus
          thanos-query-frontend:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
            datasource: Prometheus
          thanos-receieve:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
            datasource: Prometheus
          thanos-rule:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
            datasource: Prometheus
          thanos-sidecar:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
            datasource: Prometheus
          thanos-store:
            url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
            datasource: Prometheus

      forceDeployDashboards: true

      ingress:
        enabled: true
        ingressClassName: logging-nginx-internal
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-issuer
        hosts:
          - grafana.${DOMAIN_NAME}
        path: /

      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true

    # flux monitoring config will add to rbac and crd fields
    kube-state-metrics:
      enabled: true
      metricLabelsAllowlist:
        - "pods=[*]"
        - "deployments=[*]"
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node

    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: (apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authentication_token|cadvisor_version|container_blkio|container_cpu|container_fs|container_last|container_memory|container_network|container_oom|container_processes|container|csi_operations|disabled_metric|get_token|go|hidden_metric|kubelet_certificate|kubelet_cgroup|kubelet_container|kubelet_containers|kubelet_cpu|kubelet_device|kubelet_graceful|kubelet_http|kubelet_lifecycle|kubelet_managed|kubelet_node|kubelet_pleg|kubelet_pod|kubelet_run|kubelet_running|kubelet_runtime|kubelet_server|kubelet_started|kubelet_volume|kubernetes_build|kubernetes_feature|machine_cpu|machine_memory|machine_nvm|machine_scrape|node_namespace|plugin_manager|prober_probe|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|storage_operation|volume_manager|volume_operation|workqueue)_(.+)
          - action: replace
            sourceLabels: ["node"]
            targetLabel: instance
          # Drop high cardinality labels
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels: ["__name__"]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)

    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: (aggregator_openapi|aggregator_unavailable|apiextensions_openapi|apiserver_admission|apiserver_audit|apiserver_cache|apiserver_cel|apiserver_client|apiserver_crd|apiserver_current|apiserver_envelope|apiserver_flowcontrol|apiserver_init|apiserver_kube|apiserver_longrunning|apiserver_request|apiserver_requested|apiserver_response|apiserver_selfrequest|apiserver_storage|apiserver_terminated|apiserver_tls|apiserver_watch|apiserver_webhooks|authenticated_user|authentication|disabled_metric|etcd_bookmark|etcd_lease|etcd_request|field_validation|get_token|go|grpc_client|hidden_metric|kube_apiserver|kubernetes_build|kubernetes_feature|node_authorizer|pod_security|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scrape_duration|scrape_samples|scrape_series|serviceaccount_legacy|serviceaccount_stale|serviceaccount_valid|watch_cache|workqueue)_(.+)
          # Drop high cardinality labels
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels: ["__name__"]
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)

    kubeControllerManager:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|attachdetach_controller|authenticated_user|authentication|cronjob_controller|disabled_metric|endpoint_slice|ephemeral_volume|garbagecollector_controller|get_token|go|hidden_metric|job_controller|kubernetes_build|kubernetes_feature|leader_election|node_collector|node_ipam|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|pv_collector|registered_metric|replicaset_controller|rest_client|retroactive_storageclass|root_ca|running_managed|scrape_duration|scrape_samples|scrape_series|service_controller|storage_count|storage_operation|ttl_after|volume_operation|workqueue)_(.+)"

    kubeEtcd: # by default k3s using sqlite. etcd really requires proper HA setup of server nodes
      enabled: false

    kubeProxy:
      enabled: false

    kubeScheduler:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          # Remove duplicate labels provided by k3s
          - action: keep
            sourceLabels: ["__name__"]
            regex: "(apiserver_audit|apiserver_client|apiserver_delegated|apiserver_envelope|apiserver_storage|apiserver_webhooks|authenticated_user|authentication|disabled_metric|go|hidden_metric|kubernetes_build|kubernetes_feature|leader_election|process_cpu|process_max|process_open|process_resident|process_start|process_virtual|registered_metric|rest_client|scheduler|scrape_duration|scrape_samples|scrape_series|workqueue)_(.+)"

    prometheus:
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
        interval: 5s

      prometheusSpec:
        # discover resources in non "monitor" namespaces
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false

        thanos:
          image: quay.io/thanos/thanos:v0.31.0
          objectStorageConfig:
            key: thanos.yaml
            name: prometheus-thanos-blob-creds
        walCompression: true

  postRenderers:
    - kustomize:
        patches:
          - target:
              # Ignore these objects from Flux diff as they are mutated from chart hooks
              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)
              name: kube-admission
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
          - target:
              # Ignore these objects from Flux diff as they are mutated at apply time but not at dry-run time
              kind: PrometheusRule
            patch: |
              - op: add
                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection
                value: disabled
