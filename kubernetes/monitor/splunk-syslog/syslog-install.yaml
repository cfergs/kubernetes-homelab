---
# Source: splunk-connect-for-syslog/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: splunk-connect-for-syslog
  namespace: monitor
  labels:
    helm.sh/chart: splunk-connect-for-syslog-2.49.3
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.49.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "input"
    app.kubernetes.io/part-of: "Splunk"
---
# Source: splunk-connect-for-syslog/templates/secret.yaml
#apiVersion: v1
#kind: Secret
#metadata:
#  name: splunk-connection
#data:
#  hec_token: YmFuYW5h
#---
# Source: splunk-connect-for-syslog/templates/config-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: splunk-connect-for-syslog-config
  namespace: monitor
  labels:
    helm.sh/chart: splunk-connect-for-syslog-2.49.3
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.49.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "input"
    app.kubernetes.io/part-of: "Splunk"
data:
  app-vps-mikrotik_routeros.conf: |-
    #/etc/syslog-ng/conf.d/configmap/config/app_parsers/app-vps-mikrotik_routeros.conf

    application app-vps-mikrotik_routeros[sc4s-vps] {
      filter {
              host("steffy" type(string) flags(prefix))
          };
          parser {
              p_set_netsource_fields(
                  vendor('mikrotik')
                  product('routeros')
              );
          };
      };
---
# Source: splunk-connect-for-syslog/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: splunk-connect-for-syslog-tcp
  namespace: monitor
  annotations:
    metallb.universe.tf/allow-shared-ip: splunk-syslog
    metallb.universe.tf/loadBalancerIPs: ${SYSLOG_IP}
  labels:
    helm.sh/chart: splunk-connect-for-syslog-2.49.3
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.49.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "input"
    app.kubernetes.io/part-of: "Splunk"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - port: 514
      targetPort: bsd-dflt-tcp
      protocol: TCP
      name: bsd-dflt-tcp
#    - port: 6514
#      targetPort: bsd-dflt-tls
#      protocol: TCP
#      name: bsd-dflt-tls
#    - port: 601
#      targetPort: ietf-dflt-tcp
#      protocol: TCP
#      name: ietf-dflt-tcp
#    - port: 5425
#      targetPort: ietf-dflt-tls
#      protocol: TCP
#      name: ietf-dflt-tls
  selector:
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
---
# Source: splunk-connect-for-syslog/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: splunk-connect-for-syslog-udp
  namespace: monitor
  annotations:
    metallb.universe.tf/allow-shared-ip: splunk-syslog
    metallb.universe.tf/loadBalancerIPs: ${SYSLOG_IP}
  labels:
    helm.sh/chart: splunk-connect-for-syslog-2.49.3
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.49.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "input"
    app.kubernetes.io/part-of: "Splunk"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - port: 514
      targetPort: bsd-dflt-udp
      protocol: UDP
      name: bsd-dflt-udp
#    - port: 601
#      targetPort: ietf-dflt-udp
#      protocol: UDP
#      name: ietf-dflt-udp
  selector:
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
---
# Source: splunk-connect-for-syslog/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: splunk-connect-for-syslog
  namespace: monitor
  labels:
    helm.sh/chart: splunk-connect-for-syslog-2.49.3
    app.kubernetes.io/name: splunk-connect-for-syslog
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.49.3"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: "input"
    app.kubernetes.io/part-of: "Splunk"
spec:
  serviceName: splunk-connect-for-syslog
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: splunk-connect-for-syslog
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: splunk-connect-for-syslog
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: splunk-connect-for-syslog
      volumes:
        - name: syslog-ng-var
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
        - name: config
          configMap:
            name: splunk-connect-for-syslog-config
      containers:
        - name: splunk-connect-for-syslog
          image: ghcr.io/splunk/splunk-connect-for-syslog/container2:2.49.3
          imagePullPolicy: IfNotPresent
          env:
            - name: SC4S_SNMP_TRAP_COLLECT
              value: "no"
            - name: SC4S_RUNTIME_ENV
              value: "k8s"
            - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_URL
              value: "https://splunk-hec.${DOMAIN_NAME}/services/collector/event"
            - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  key: hec_token
                  name: splunk-monitor-secret
            - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_TLS_VERIFY
              value: "no"
            - name: SC4S_DEST_SPLUNK_HEC_DEFAULT_DISKBUFF_ENABLE
              value: "yes"
            - name: SC4S_SOURCE_TLS_ENABLE
              value: "no"
            #- name: SC4S_SOURCE_STORE_RAWMSG
            #  value: "yes"
          ports:
            - name: bsd-dflt-tcp
              containerPort: 514
              protocol: TCP
            - name: bsd-dflt-udp
              containerPort: 514
              protocol: UDP
            #- name: bsd-dflt-tls
            #  containerPort: 6514
            #  protocol: TCP
            #- name: ietf-dflt-tcp
            #  containerPort: 601
            #  protocol: TCP
            #- name: ietf-dflt-udp
            #  containerPort: 601
            #  protocol: UDP
            #- name: ietf-dflt-tls
            #  containerPort: 5425
            #  protocol: TCP
            - name: health
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: syslog-ng-var
              mountPath: /var/lib/syslog-ng
            - name: config
              mountPath: /etc/syslog-ng/conf.d/configmap/config/app_parsers
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            failureThreshold: 60
            periodSeconds: 10
            timeoutSeconds: 5
          securityContext:
          # don't set ROFS, prevent perm elevations - this will break container
            capabilities:
              drop:
                - ALL
